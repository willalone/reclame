import React, { useState, useEffect } from 'react'
import './Quiz.css'

const Quiz = ({ onComplete }) => {
  const [currentQuestion, setCurrentQuestion] = useState(0)
  const [selectedAnswers, setSelectedAnswers] = useState({})
  const [isTransitioning, setIsTransitioning] = useState(false)
  const [showForm, setShowForm] = useState(false)
  const [formData, setFormData] = useState({ name: '', phone: '' })

  const questions = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?",
      options: [
        { value: "studio", label: "–°—Ç—É–¥–∏—è", image: "./question1.png" },
        { value: "1room", label: "1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", image: "./question1.png" },
        { value: "2room", label: "2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", image: "./question1.png" },
        { value: "3room", label: "3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", image: "./question1.png" }
      ]
    },
    {
      id: 2,
      question: "–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–¥–µ–ª–∫–∏ –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?",
      options: [
        { value: "prefinish", label: "–ü—Ä–µ–¥—á–∏—Å—Ç–æ–≤–∞—è", image: "./question2.png" },
        { value: "renovated", label: "–° —Ä–µ–º–æ–Ω—Ç–æ–º", image: "./question2.png" },
        { value: "different", label: "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã", image: "./question2.png" }
      ]
    },
    {
      id: 3,
      question: "–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –ø–æ–∫—É–ø–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?",
      options: [
        { value: "mortgage", label: "–ò–ø–æ—Ç–µ–∫–∞", image: "./question3.png" },
        { value: "state_mortgage", label: "–ò–ø–æ—Ç–µ–∫–∞ —Å –≥–æ—Å. –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", image: "./question3.png" },
        { value: "installment", label: "–†–∞—Å—Å—Ä–æ—á–∫–∞", image: "./question3.png" },
        { value: "cash", label: "–ù–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç", image: "./question3.png" },
        { value: "different", label: "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã", image: "./question3.png" }
      ]
    }
  ]

  const progress = Math.round((currentQuestion / questions.length) * 100)

  const handleAnswerSelect = (answer) => {
    setSelectedAnswers(prev => ({
      ...prev,
      [currentQuestion]: answer
    }))
    
    setIsTransitioning(true)
    
    setTimeout(() => {
      if (currentQuestion < questions.length - 1) {
        setCurrentQuestion(prev => prev + 1)
      } else {
        setShowForm(true)
      }
      setIsTransitioning(false)
    }, 3000)
  }

  const handleNext = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(prev => prev + 1)
    } else {
      setShowForm(true)
    }
  }

  const handlePrev = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(prev => prev - 1)
    }
  }

  const handleFormSubmit = async (e) => {
    e.preventDefault()
    
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ä–º—ã...')
    
    const results = {
      answers: selectedAnswers,
      name: formData.name,
      phone: formData.phone,
      timestamp: new Date().toISOString()
    }

    console.log('üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', results)

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    try {
      // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
      const messageText = `üè† –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–≤–∏–∑–∞ "–°–∞–º–æ–ª–µ—Ç –ú–ö–†"

üë§ –ò–º—è: ${results.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${results.phone}

üìù –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
${Object.entries(results.answers).map(([key, value]) => {
  const question = questions.find(q => q.id === parseInt(key))
  const option = question?.options.find(opt => opt.value === value)
  return `‚Ä¢ ${question?.question}: ${option?.label || value}`
}).join('\n')}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
      const savedApplications = JSON.parse(localStorage.getItem('quizApplications') || '[]')
      savedApplications.push({
        ...results,
        messageText,
        timestamp: new Date().toISOString()
      })
      localStorage.setItem('quizApplications', JSON.stringify(savedApplications))

      console.log('üìù –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ...')
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      const modal = document.createElement('div')
      modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100%; height: 100%; 
        background: rgba(0,0,0,0.8); z-index: 10000; display: flex; 
        align-items: center; justify-content: center;
      `
      modal.innerHTML = `
        <div style="background: white; padding: 30px; border-radius: 12px; max-width: 600px; max-height: 80vh; overflow-y: auto; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">
          <h2 style="margin: 0 0 20px 0; color: #333;">üìã –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏</h2>
          <p style="margin: 0 0 15px 0; color: #666;">–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ Telegram –±–æ—Ç:</p>
          <textarea readonly style="width: 100%; height: 300px; padding: 15px; border: 1px solid #ddd; border-radius: 8px; font-family: monospace; font-size: 14px; resize: vertical;">${messageText}</textarea>
          <div style="margin-top: 20px; display: flex; gap: 10px; flex-wrap: wrap;">
            <button onclick="navigator.clipboard.writeText(this.parentElement.previousElementSibling.value); alert('‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!')" style="background: #007bff; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer; font-size: 16px;">üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
            <button onclick="window.open('https://t.me/your_bot_username', '_blank')" style="background: #0088cc; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer; font-size: 16px;">üì± –û—Ç–∫—Ä—ã—Ç—å Telegram</button>
            <button onclick="this.parentElement.parentElement.parentElement.remove()" style="background: #6c757d; color: white; border: none; padding: 12px 24px; border-radius: 6px; cursor: pointer; font-size: 16px;">‚ùå –ó–∞–∫—Ä—ã—Ç—å</button>
          </div>
          <p style="margin: 15px 0 0 0; font-size: 14px; color: #666;">üí° –î–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
        </div>
      `
      document.body.appendChild(modal)
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DOM')

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
      try {
        navigator.clipboard.writeText(messageText).then(() => {
          console.log('–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞')
        }).catch(e => {
          console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:', e)
        })
      } catch (e) {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:', e)
      }

    } catch (error) {
      console.error('–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
      console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
      alert(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.`)
    }
  }

  const formatPhone = (value) => {
    const numbers = value.replace(/\D/g, '')
    if (numbers.length === 0) return ''
    if (numbers.length <= 1) return `+7(${numbers}`
    if (numbers.length <= 4) return `+7(${numbers.slice(1)}`
    if (numbers.length <= 7) return `+7(${numbers.slice(1, 4)})${numbers.slice(4)}`
    if (numbers.length <= 9) return `+7(${numbers.slice(1, 4)})${numbers.slice(4, 7)}-${numbers.slice(7)}`
    return `+7(${numbers.slice(1, 4)})${numbers.slice(4, 7)}-${numbers.slice(7, 9)}-${numbers.slice(9, 11)}`
  }

  const handlePhoneChange = (e) => {
    const formatted = formatPhone(e.target.value)
    setFormData(prev => ({ ...prev, phone: formatted }))
  }

  if (showForm) {
    return (
      <div className="quiz-container">
        <div className="quiz-header">
          <div className="quiz-banner">
            –ü–æ–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –∏ –¥–æ–º, —á—Ç–æ–±—ã –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥–∏–ª–∏ –∏–º–µ–Ω–Ω–æ –ø–æ–¥ –≤–∞—à –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
          </div>
        </div>
        
        <div className="quiz-content final-page">
          <div className="quiz-left">
            <h2 className="quiz-question">–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –∫–≤–∞—Ä—Ç–∏—Ä, –∑–∞–ø–æ–ª–Ω–∏–≤ —Ñ–æ—Ä–º—É</h2>
            
            <div className="quiz-features">
              <p>–í –ú–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–µ ¬´–°–∞–º–æ–ª—ë—Ç¬ª –æ—Ç DOGMA –µ—Å—Ç—å –≤—Å–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∂–∏–∑–Ω–∏:</p>
              <ul>
                <li>–ê–º—Ñ–∏—Ç–µ–∞—Ç—Ä –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º –Ω–∞ –±—É–ª—å–≤–∞—Ä–µ</li>
                <li>–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –ø–æ—Å—Ç –æ—Ö—Ä–∞–Ω—ã</li>
                <li>11 –ø–∞–≤–∏–ª—å–æ–Ω–æ–≤ —Ñ—É–¥–∫–æ—Ä—Ç–∞</li>
                <li>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ—à–µ—Ö–æ–¥–Ω—ã–π –±—É–ª—å–≤–∞—Ä 1,6 –∫–º</li>
                <li>9 –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</li>
                <li>–ó–æ–Ω—ã –±–∞—Ä–±–µ–∫—é –∑–æ–Ω—ã —Å —Ç–µ–Ω–µ–≤—ã–º –Ω–∞–≤–µ—Å–∞–º–∏</li>
                <li>–î–æ—Ä–æ–≥–∏-–¥—É–±–ª—ë—Ä—ã</li>
              </ul>
            </div>
            
            <form onSubmit={handleFormSubmit} className="quiz-form">
              <div className="form-group">
                <label>–í–í–ï–î–ò–¢–ï –ò–ú–Ø</label>
                <input
                  type="text"
                  value={formData.name}
                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                  placeholder="–ò–º—è"
                  required
                />
              </div>
              
              <div className="form-group">
                <label>–í–í–ï–î–ò–¢–ï –¢–ï–õ–ï–§–û–ù</label>
                <div className="phone-input">
                  <input
                    type="tel"
                    value={formData.phone}
                    onChange={handlePhoneChange}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω *"
                    maxLength="18"
                    required
                  />
                </div>
              </div>
              
              <button type="submit" className="submit-button">
                –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
              </button>
              
              <div className="form-checkbox">
                <input type="checkbox" required />
                <span>–Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–Ω–æ –ø–æ–ª–∏—Ç–∏–∫–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</span>
              </div>
            </form>
          </div>
          
          <div className="quiz-right">
            <div className="question-image">
              <img src="./background-last.png" alt="–ñ–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å" />
            </div>
          </div>
        </div>
        
        <div className="quiz-footer">
        </div>
      </div>
    )
  }

  return (
    <div className="quiz-container">
      <div className="quiz-header">
        <div className="quiz-banner">
          –ü–æ–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –∏ –¥–æ–º, —á—Ç–æ–±—ã –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥–∏–ª–∏ –∏–º–µ–Ω–Ω–æ –ø–æ–¥ –≤–∞—à –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
        </div>
      </div>
      
      <div className="quiz-content">
        <div className="quiz-left">
          <h2 className="quiz-question">{questions[currentQuestion].question}</h2>
          
          <div className="quiz-options">
            {questions[currentQuestion].options.map((option, index) => (
              <div
                key={index}
                className={`quiz-option ${selectedAnswers[currentQuestion] === option.value ? 'selected' : ''}`}
                onClick={() => handleAnswerSelect(option.value)}
              >
                <div className="option-radio">
                  <div className="radio-circle"></div>
                </div>
                <span>{option.label}</span>
              </div>
            ))}
          </div>
        </div>
        
        <div className="quiz-right">
          <div className="question-image">
            <img src={questions[currentQuestion].options[0].image} alt="–í–æ–ø—Ä–æ—Å" />
          </div>
        </div>
      </div>
      
        <div className="quiz-footer">
          <div className="progress-info">
            <span>–ì–æ—Ç–æ–≤–æ: {progress}%</span>
            <div className="progress-bar">
              <div className="progress-fill" style={{ width: `${progress}%` }}></div>
            </div>
          </div>
          
          <div className="quiz-navigation">
            <button 
              className="nav-button prev" 
              onClick={handlePrev}
              disabled={currentQuestion === 0}
            >
              ‚Üê
            </button>
            <button 
              className="nav-button next" 
              onClick={handleNext}
              disabled={currentQuestion === questions.length - 1}
            >
              {currentQuestion === questions.length - 1 ? '–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥' : '–î–∞–ª–µ–µ ‚Üí'}
            </button>
          </div>
        </div>
    </div>
  )
}

export default Quiz
