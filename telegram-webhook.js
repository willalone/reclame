// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
const express = require('express');
const cors = require('cors');
const axios = require('axios');

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json());

// Telegram bot configuration
const BOT_TOKEN = '8026350498:AAGcyKMsrJyD0mGgj26Ss2m49vX5jp8LzaM';
const CHAT_ID = '919481169';

// Endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
app.post('/send-message', async (req, res) => {
  try {
    const { name, phone, answers } = req.body;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üè† –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–≤–∏–∑–∞ "–°–∞–º–æ–ª–µ—Ç –ú–ö–†"

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}

üìù –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
${Object.entries(answers).map(([key, value]) => {
  const questions = [
    { id: 1, question: "–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?" },
    { id: 2, question: "–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–¥–µ–ª–∫–∏ –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?" },
    { id: 3, question: "–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –ø–æ–∫—É–ø–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ?" }
  ];
  const question = questions.find(q => q.id === parseInt(key));
  return `‚Ä¢ ${question?.question}: ${value}`;
}).join('\n')}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const response = await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: CHAT_ID,
      text: message
    });

    res.json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
